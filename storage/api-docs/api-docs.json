{
    "openapi": "3.0.0",
    "info": {
        "title": "PetSpace",
        "description": "Documentation for PetSpace Endpoints",
        "version": "1.0.0"
    },
    "paths": {
        "/account/user": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get user account details",
                "description": "Retrieves the account details of the currently authenticated user. Web register and login returns the same json structure",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "User account details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "Charm"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Test"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "dob": {
                                            "type": "string",
                                            "format": "date",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "gender": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "test2@example.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "pets_count": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "is_form_filled": {
                                            "type": "boolean",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "profile_image": {
                                            "type": "string",
                                            "format": "url",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "address": {
                                            "properties": {
                                                "street_name": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "province": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "postal_code": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated"
                    },
                    "404": {
                        "description": "User account not found"
                    }
                }
            }
        },
        "/account/update": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Update user account details",
                "description": "Updates the user account information, including address and personal details",
                "operationId": "updateUserAccount",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "User's first name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Steve"
                                    },
                                    "last_name": {
                                        "description": "User's last name",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Tester"
                                    },
                                    "phone": {
                                        "description": "User's phone number",
                                        "type": "string",
                                        "example": "(123) 456-7890"
                                    },
                                    "address_street_name": {
                                        "description": "Street name of the user's address",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "103 Redfox Grove"
                                    },
                                    "address_city": {
                                        "description": "City of the user's address",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Waterloo"
                                    },
                                    "address_province": {
                                        "description": "Province of the user's address",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Alberta"
                                    },
                                    "address_country": {
                                        "description": "Country of the user's address",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Canada"
                                    },
                                    "address_postal_code": {
                                        "description": "Postal code of the user's address",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "A1B 2C3"
                                    },
                                    "is_form_filled": {
                                        "description": "Indicates whether the user form has been filled",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User account updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "Steve"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Tester"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "dob": {
                                            "type": "string",
                                            "format": "date",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "gender": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "steve.test@example.com"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "(123) 456-7890"
                                        },
                                        "pets_count": {
                                            "type": "integer",
                                            "example": 4
                                        },
                                        "is_form_filled": {
                                            "type": "boolean",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "profile_image": {
                                            "type": "string",
                                            "format": "url",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "address": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "street_name": {
                                                    "type": "string",
                                                    "example": "103 Redfox Grove"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Waterloo"
                                                },
                                                "province": {
                                                    "type": "string",
                                                    "example": "Alberta"
                                                },
                                                "postal_code": {
                                                    "type": "string",
                                                    "example": "A1B 2C3"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "Canada"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input"
                    },
                    "404": {
                        "description": "Not Found - User not found"
                    }
                }
            }
        },
        "/pet/{petId}/appointment/veterinarians": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get list of veterinarians for a pet appointment",
                "description": "Retrieves a list of veterinarians available for a specific pet's appointment.",
                "operationId": "getVeterinarians",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "The ID of the pet to fetch the veterinarians for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of veterinarians for the pet's appointment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Veterinarian ID",
                                                "type": "integer"
                                            },
                                            "first_name": {
                                                "description": "Veterinarian's first name",
                                                "type": "string"
                                            },
                                            "last_name": {
                                                "description": "Veterinarian's last name",
                                                "type": "string"
                                            },
                                            "professional_title": {
                                                "description": "Veterinarian's professional title",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid pet ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "pet/{petId}/appointment/vet-schedule/{scheduleId}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get veterinarian schedule for a pet appointment",
                "description": "Retrieves the details of a specific veterinarian's schedule for a pet appointment, including service provider, schedule time, and cost.",
                "operationId": "getVeterinarianSchedule",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "The ID of the pet to fetch the veterinarian schedule for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "scheduleId",
                        "in": "path",
                        "description": "The ID of the veterinarian schedule",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of available veterinarian schedules for the pet's appointment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "The unique ID of the veterinarian schedule",
                                                "type": "integer"
                                            },
                                            "user_id": {
                                                "description": "The ID of the user (veterinarian)",
                                                "type": "integer"
                                            },
                                            "service_company_provider_name": {
                                                "description": "The name of the veterinary service provider",
                                                "type": "string"
                                            },
                                            "schedule_date": {
                                                "description": "The date of the appointment",
                                                "type": "string",
                                                "format": "date"
                                            },
                                            "start_time": {
                                                "description": "The start time of the appointment",
                                                "type": "string",
                                                "format": "time"
                                            },
                                            "end_time": {
                                                "description": "The end time of the appointment",
                                                "type": "string",
                                                "format": "time"
                                            },
                                            "is_booked": {
                                                "description": "Whether the appointment is booked",
                                                "type": "boolean"
                                            },
                                            "description": {
                                                "description": "The description of the appointment",
                                                "type": "string"
                                            },
                                            "cost": {
                                                "description": "The cost of the appointment",
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "location": {
                                                "description": "The location of the veterinary service provider",
                                                "type": "string"
                                            },
                                            "service_type": {
                                                "description": "The type of veterinary service (e.g., checkup, emergency care)",
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "description": "When the schedule was created",
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "description": "When the schedule was last updated",
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid pet ID or schedule ID supplied"
                    },
                    "404": {
                        "description": "Pet or schedule not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/pet/{pet_id}/appointment": {
            "post": {
                "tags": [
                    "appointments"
                ],
                "summary": "Create an appointment",
                "description": "Creates or updates an appointment for a pet, including notes and schedule.",
                "operationId": "createOrUpdateAppointment",
                "parameters": [
                    {
                        "name": "pet_id",
                        "in": "path",
                        "description": "ID of the pet for which the appointment is being created",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "schedule_id",
                                    "notes"
                                ],
                                "properties": {
                                    "schedule_id": {
                                        "description": "The ID of the schedule",
                                        "type": "integer"
                                    },
                                    "notes": {
                                        "description": "Additional notes for the appointment",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment created/updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "The ID of the appointment",
                                            "type": "integer"
                                        },
                                        "status": {
                                            "description": "The status of the appointment (confirmed)",
                                            "type": "string"
                                        },
                                        "schedule_id": {
                                            "description": "The ID of the associated schedule",
                                            "type": "integer"
                                        },
                                        "request_date": {
                                            "description": "The request date and time of the appointment",
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "confirmed_at": {
                                            "description": "The confirmation date and time",
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "canceled_at": {
                                            "description": "The cancellation date and time, if applicable",
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "notes": {
                                            "description": "The notes for the appointment",
                                            "type": "string"
                                        },
                                        "provider_first_name": {
                                            "description": "The first name of the provider",
                                            "type": "string"
                                        },
                                        "provider_last_name": {
                                            "description": "The last name of the provider",
                                            "type": "string"
                                        },
                                        "service_company_provider_name": {
                                            "description": "The name of the service provider company",
                                            "type": "string"
                                        },
                                        "location": {
                                            "description": "The location of the appointment",
                                            "type": "string"
                                        },
                                        "schedule_date": {
                                            "description": "The scheduled date of the appointment",
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "start_time": {
                                            "description": "The start time of the appointment",
                                            "type": "string",
                                            "format": "time"
                                        },
                                        "end_time": {
                                            "description": "The end time of the appointment",
                                            "type": "string",
                                            "format": "time"
                                        },
                                        "service_type": {
                                            "description": "The type of service",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input, appointment could not be created"
                    },
                    "404": {
                        "description": "Pet or schedule not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/pet/pet-detail/{petId}": {
            "get": {
                "tags": [
                    "Pet Profile"
                ],
                "summary": "Get pet details by ID",
                "description": "Retrieves detailed information about a pet, including its breed, gender, color, and other details.",
                "operationId": "getPetDetail",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of the pet",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Nacho"
                                        },
                                        "breed": {
                                            "type": "string",
                                            "example": "Persian"
                                        },
                                        "dob": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2022/06/28"
                                        },
                                        "gender": {
                                            "type": "string",
                                            "example": "male"
                                        },
                                        "animal_type": {
                                            "type": "string",
                                            "example": "cat"
                                        },
                                        "color": {
                                            "type": "string",
                                            "example": "white"
                                        },
                                        "bio": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "is_microchipped": {
                                            "type": "boolean",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "microchip_id": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "is_spayed_neutered": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "pet_image": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet not found"
                    }
                }
            }
        },
        "/pet-record/upload": {
            "post": {
                "tags": [
                    "Pet Document Records"
                ],
                "summary": "Upload a pet document",
                "operationId": "979d896d67c8fb07a9ee72ef9608c47a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pet_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "filename": {
                                        "type": "string",
                                        "example": "document.pdf"
                                    },
                                    "document": {
                                        "type": "string",
                                        "format": "binary",
                                        "example": "document.pdf"
                                    },
                                    "date_added": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-11-04"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/pet-record/list/{pet_id}": {
            "get": {
                "tags": [
                    "Pet Document Records"
                ],
                "summary": "Retrieve document records for a specific pet",
                "operationId": "7b6cd007b437bc32e093c23e3adc09a9",
                "parameters": [
                    {
                        "name": "pet_id",
                        "in": "path",
                        "description": "ID of the pet to retrieve records for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Record retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Record retrieved successfully"
                                        },
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "pet_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "added_by_id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "added_by_first_name": {
                                                        "type": "string",
                                                        "example": "Steve"
                                                    },
                                                    "added_by_last_name": {
                                                        "type": "string",
                                                        "example": "Tester"
                                                    },
                                                    "record_path": {
                                                        "type": "string",
                                                        "format": "url",
                                                        "example": "http://localhost:8000/storage/3/documents/kXD9Eh3xZBTEXjwzvIIZBcqY6TJGG2BN07PlU34F.pdf?expires=1730855033&signature=c3e5c7daa5a259afc22b91580bc3d8a88b4b7c4749a206bf3e7ade0731ef7b59"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-11-04T20:21:36.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-11-04T20:21:36.000000Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You are not authorized"
                    },
                    "404": {
                        "description": "No documents found"
                    }
                }
            }
        },
        "/pet/allergen-dictionary": {
            "get": {
                "tags": [
                    "PetHealth"
                ],
                "summary": "Get allergen dictionary list",
                "description": "Retrieves a list of allergens and their classifications",
                "operationId": "getAllergenDictionary",
                "responses": {
                    "200": {
                        "description": "Allergy List retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Allergy List retrieved successfully"
                                        },
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "ID of the allergen",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "allergen": {
                                                        "description": "Name of the allergen",
                                                        "type": "string",
                                                        "example": "Beef"
                                                    },
                                                    "classification": {
                                                        "description": "Classification of the allergen",
                                                        "type": "string",
                                                        "example": "Food"
                                                    },
                                                    "species_affected": {
                                                        "description": "Species affected by the allergen",
                                                        "type": "string",
                                                        "example": "Dog & Cat"
                                                    },
                                                    "created_at": {
                                                        "description": "Timestamp of allergen creation",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": null,
                                                        "nullable": true
                                                    },
                                                    "updated_at": {
                                                        "description": "Timestamp of allergen update",
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": null,
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Allergens not found"
                    }
                }
            }
        },
        "pet/{petId}/allergy/add/{allergenId}": {
            "post": {
                "tags": [
                    "PetHealth"
                ],
                "summary": "Add a pet allergy",
                "description": "Adds an allergy to a pet and returns the updated list of allergies",
                "operationId": "addPetAllergy",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of the pet",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "allergenId",
                        "in": "path",
                        "description": "ID of the allergen",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Allergy added successfully with updated allergy list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pet Allergy added successfully"
                                        },
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Record ID of the pet allergy",
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "allergen_id": {
                                                        "description": "ID of the allergen",
                                                        "type": "integer",
                                                        "example": 11
                                                    },
                                                    "allergen": {
                                                        "description": "Name of the allergen",
                                                        "type": "string",
                                                        "example": "Turkey"
                                                    },
                                                    "classification": {
                                                        "description": "Classification of the allergen",
                                                        "type": "string",
                                                        "example": "Food"
                                                    },
                                                    "added_by_first_name": {
                                                        "description": "First name of the person who added the allergy",
                                                        "type": "string",
                                                        "example": "Steve"
                                                    },
                                                    "added_by_last_name": {
                                                        "description": "Last name of the person who added the allergy",
                                                        "type": "string",
                                                        "example": "Tester"
                                                    },
                                                    "added_by_role": {
                                                        "description": "Role of the person who added the allergy, if applicable",
                                                        "type": "string",
                                                        "example": null,
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet not found"
                    }
                }
            }
        },
        "/pet/{petId}/allergy/remove/{allergenId}": {
            "delete": {
                "tags": [
                    "PetHealth"
                ],
                "summary": "Remove pet allergy",
                "description": "Removes an allergy from the specified pet and returns the updated allergy list",
                "operationId": "removePetAllergy",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of the pet",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "allergenId",
                        "in": "path",
                        "description": "ID of the allergen to be removed",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet allergy removed successfully with updated allergy list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pet allergy removed successfully"
                                        },
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Record ID of the pet allergy",
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "allergen_id": {
                                                        "description": "ID of the allergen",
                                                        "type": "integer",
                                                        "example": 11
                                                    },
                                                    "allergen": {
                                                        "description": "Name of the allergen",
                                                        "type": "string",
                                                        "example": "Turkey"
                                                    },
                                                    "classification": {
                                                        "description": "Classification of the allergen",
                                                        "type": "string",
                                                        "example": "Food"
                                                    },
                                                    "added_by_first_name": {
                                                        "description": "First name of the person who added the allergy",
                                                        "type": "string",
                                                        "example": "Steve"
                                                    },
                                                    "added_by_last_name": {
                                                        "description": "Last name of the person who added the allergy",
                                                        "type": "string",
                                                        "example": "Tester"
                                                    },
                                                    "added_by_role": {
                                                        "description": "Role of the person who added the allergy, if applicable",
                                                        "type": "string",
                                                        "example": null,
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet or allergen not found"
                    }
                }
            }
        },
        "/pet/{petId}/allergies": {
            "get": {
                "tags": [
                    "PetHealth"
                ],
                "summary": "Get pet allergy list",
                "description": "Retrieves a list of allergies for the specified pet",
                "operationId": "getPetAllergies",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of the pet",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet allergy list retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pet allergy list retrieved successfully"
                                        },
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Record ID of the pet allergy",
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "allergen_id": {
                                                        "description": "ID of the allergen",
                                                        "type": "integer",
                                                        "example": 11
                                                    },
                                                    "allergen": {
                                                        "description": "Name of the allergen",
                                                        "type": "string",
                                                        "example": "Turkey"
                                                    },
                                                    "classification": {
                                                        "description": "Classification of the allergen",
                                                        "type": "string",
                                                        "example": "Food"
                                                    },
                                                    "added_by_first_name": {
                                                        "description": "First name of the person who added the allergy",
                                                        "type": "string",
                                                        "example": "Steve"
                                                    },
                                                    "added_by_last_name": {
                                                        "description": "Last name of the person who added the allergy",
                                                        "type": "string",
                                                        "example": "Tester"
                                                    },
                                                    "added_by_role": {
                                                        "description": "Role of the person who added the allergy, if applicable",
                                                        "type": "string",
                                                        "example": null,
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet not found"
                    }
                }
            }
        },
        "pet/{petId}/weight/update/{weight}": {
            "post": {
                "tags": [
                    "PetHealth"
                ],
                "summary": "Updates pet weight",
                "description": "Updates pet weight",
                "operationId": "updatePetWeight",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of the pet",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "weight",
                        "in": "path",
                        "description": "pet weight",
                        "required": true,
                        "schema": {
                            "type": "decimal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of weight records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pet weight updated successfully"
                                        },
                                        "weight": {
                                            "properties": {
                                                "weight": {
                                                    "description": "Updated weight of the pet",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 5.5
                                                },
                                                "added_by_first_name": {
                                                    "description": "First name of the person who updated the weight",
                                                    "type": "string",
                                                    "example": "Steve"
                                                },
                                                "added_by_last_name": {
                                                    "description": "Last name of the person who updated the weight",
                                                    "type": "string",
                                                    "example": "Tester"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet not found"
                    }
                }
            }
        },
        "/pet/{petId}/weight/latest": {
            "get": {
                "tags": [
                    "PetHealth"
                ],
                "summary": "Retrieve pet's latest weight",
                "description": "Returns data for pet's latest weight and the user who added it.",
                "operationId": "getPetWeightLatest",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of the pet",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pet's latest weight record retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "weight": {
                                            "description": "Pet weight in kilograms",
                                            "type": "number",
                                            "format": "decimal",
                                            "example": "3.5"
                                        },
                                        "added_by_first_name": {
                                            "type": "string",
                                            "example": "Steve"
                                        },
                                        "added_by_last_name": {
                                            "type": "string",
                                            "example": "Tester"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-11-07T21:52:28Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet not found"
                    }
                }
            }
        },
        "/pet/{petId}/special-cond/update/{conditionId}": {
            "post": {
                "tags": [
                    "PetHealth"
                ],
                "summary": "Update a special condition for a pet",
                "description": "Updates a specific special condition for a pet by condition ID.",
                "operationId": "updatePetSpecialCondition",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of the pet",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "conditionId",
                        "in": "path",
                        "description": "ID of the special condition",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 4
                        }
                    }
                ],
                "requestBody": {
                    "description": "Special condition details to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "condition_name": {
                                        "type": "string",
                                        "example": "Not ticks"
                                    },
                                    "condition_note": {
                                        "type": "string",
                                        "example": "More ticksss"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Special condition updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Special condition updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet or special condition not found"
                    }
                }
            }
        },
        "/pet/{petId}/special-cond/{conditionId}": {
            "delete": {
                "tags": [
                    "PetHealth"
                ],
                "summary": "Delete a special condition for a pet",
                "description": "Deletes a specific special condition for a pet by its condition ID.",
                "operationId": "deletePetSpecialCondition",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of the pet",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "conditionId",
                        "in": "path",
                        "description": "ID of the special condition",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Special condition removed successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Special condition removed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet or special condition not found"
                    }
                }
            }
        },
        "/pet/{petId}/special-cond/list": {
            "get": {
                "tags": [
                    "PetHealth"
                ],
                "summary": "Get special conditions for a pet",
                "description": "Retrieves a list of special conditions for a pet, including the condition name, note, and details of the user who added it.",
                "operationId": "getPetSpecialConditions",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of the pet",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Special condition retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Special condition retrieved successfully."
                                        },
                                        "list": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "pet_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "added_by": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "condition_name": {
                                                        "type": "string",
                                                        "example": "Has a LOT ticks"
                                                    },
                                                    "condition_note": {
                                                        "type": "string",
                                                        "example": "Ticks"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-11-10 02:59:06"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": null,
                                                        "nullable": true
                                                    },
                                                    "added_by_first_name": {
                                                        "type": "string",
                                                        "example": "Steve"
                                                    },
                                                    "added_by_last_name": {
                                                        "type": "string",
                                                        "example": "Tester"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet not found"
                    }
                }
            }
        },
        "/pet/{petId}/special-cond/latest": {
            "get": {
                "tags": [
                    "PetHealth"
                ],
                "summary": "Get the latest special condition for a pet",
                "description": "Retrieves the latest special condition for a pet, including the condition details and the user who added it.",
                "operationId": "getLatestPetSpecialCondition",
                "parameters": [
                    {
                        "name": "petId",
                        "in": "path",
                        "description": "ID of the pet",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Special condition retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Special condition retrieved successfully."
                                        },
                                        "condition": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "pet_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "added_by": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "condition_name": {
                                                    "type": "string",
                                                    "example": "Has a LOT ticks"
                                                },
                                                "condition_note": {
                                                    "type": "string",
                                                    "example": "Ticks"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-11-10 02:59:06"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "added_by_first_name": {
                                                    "type": "string",
                                                    "example": "Steve"
                                                },
                                                "added_by_last_name": {
                                                    "type": "string",
                                                    "example": "Tester"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pet or special condition not found"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Account",
            "description": "Account"
        },
        {
            "name": "Appointments",
            "description": "Appointments"
        },
        {
            "name": "appointments",
            "description": "appointments"
        },
        {
            "name": "Pet Profile",
            "description": "Pet Profile"
        },
        {
            "name": "Pet Document Records",
            "description": "Pet Document Records"
        },
        {
            "name": "PetHealth",
            "description": "PetHealth"
        }
    ]
}